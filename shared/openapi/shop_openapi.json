openapi: 3.0.3
info:
  title: ShopDjango API
  version: 1.0.0
  description: API for ShopDjango project
paths:
  /api/catalog/categories/:
    get:
      operationId: catalog_categories_list
      description: ViewSet for Category model with CRUD operations.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: catalog_categories_create
      description: ViewSet for Category model with CRUD operations.
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/catalog/categories/{id}/:
    get:
      operationId: catalog_categories_retrieve
      description: ViewSet for Category model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: catalog_categories_update
      description: ViewSet for Category model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: catalog_categories_partial_update
      description: ViewSet for Category model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: catalog_categories_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/deliveries/:
    get:
      operationId: catalog_deliveries_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductDeliveryList'
          description: ''
    post:
      operationId: catalog_deliveries_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDelivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductDelivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductDelivery'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDelivery'
          description: ''
  /api/catalog/deliveries/{id}/:
    get:
      operationId: catalog_deliveries_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product Delivery.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDelivery'
          description: ''
    put:
      operationId: catalog_deliveries_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product Delivery.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDelivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductDelivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductDelivery'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDelivery'
          description: ''
    patch:
      operationId: catalog_deliveries_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product Delivery.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductDelivery'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductDelivery'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductDelivery'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDelivery'
          description: ''
    delete:
      operationId: catalog_deliveries_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product Delivery.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/images/:
    get:
      operationId: catalog_images_list
      description: ViewSet for ProductImage model with CRUD operations.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: product
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductImage'
          description: ''
    post:
      operationId: catalog_images_create
      description: Create a new product image with file upload.
      tags:
      - catalog
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Image file to upload
                product:
                  type: integer
                  description: Product ID
                is_primary:
                  type: boolean
                  description: Whether this is the primary product image
                  default: false
                sort_order:
                  type: integer
                  description: Display order of images
                  default: 0
              required:
              - image
              - product
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/catalog/images/{id}/:
    get:
      operationId: catalog_images_retrieve
      description: ViewSet for ProductImage model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: catalog_images_update
      description: ViewSet for ProductImage model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: catalog_images_partial_update
      description: ViewSet for ProductImage model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: catalog_images_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/images/{id}/set_primary/:
    post:
      operationId: catalog_images_set_primary_create
      description: Set this image as primary for its product
      summary: Set image as primary
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product image.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/catalog/manufacturers/:
    get:
      operationId: catalog_manufacturers_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManufacturerList'
          description: ''
    post:
      operationId: catalog_manufacturers_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManufacturerCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManufacturerCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerCreate'
          description: ''
  /api/catalog/manufacturers/{id}/:
    get:
      operationId: catalog_manufacturers_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
    put:
      operationId: catalog_manufacturers_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManufacturerUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManufacturerUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturerUpdate'
          description: ''
    patch:
      operationId: catalog_manufacturers_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedManufacturer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedManufacturer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedManufacturer'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
          description: ''
    delete:
      operationId: catalog_manufacturers_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/notifications/history/:
    get:
      operationId: catalog_notifications_history_list
      description: List notification history
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationHistoryList'
          description: ''
    post:
      operationId: catalog_notifications_history_create
      description: ViewSet for viewing notification history.
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationHistory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHistory'
          description: ''
  /api/catalog/notifications/history/{id}/:
    get:
      operationId: catalog_notifications_history_retrieve
      description: Get specific notification from history
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
          description: ''
    put:
      operationId: catalog_notifications_history_update
      description: ViewSet for viewing notification history.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationHistory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHistory'
          description: ''
    patch:
      operationId: catalog_notifications_history_partial_update
      description: ViewSet for viewing notification history.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationHistory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHistory'
          description: ''
    delete:
      operationId: catalog_notifications_history_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/notifications/preferences/:
    get:
      operationId: catalog_notifications_preferences_list
      description: ViewSet for managing user notification preferences.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationPreference'
          description: ''
    post:
      operationId: catalog_notifications_preferences_create
      description: ViewSet for managing user notification preferences.
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationPreference'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
          description: ''
  /api/catalog/notifications/preferences/{id}/:
    get:
      operationId: catalog_notifications_preferences_retrieve
      description: Get current user's notification preferences
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
          description: ''
    put:
      operationId: catalog_notifications_preferences_update
      description: ViewSet for managing user notification preferences.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreferenceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationPreferenceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationPreferenceUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreferenceUpdate'
          description: ''
    patch:
      operationId: catalog_notifications_preferences_partial_update
      description: Update notification preferences
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotificationPreferenceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotificationPreferenceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotificationPreferenceUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
          description: ''
    delete:
      operationId: catalog_notifications_preferences_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/products/:
    get:
      operationId: catalog_products_list
      description: ViewSet for Product model with advanced CRUD operations.
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: category__in
        schema:
          type: array
          items:
            type: integer
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - in: query
        name: category__name
        schema:
          type: string
      - in: query
        name: category__name__icontains
        schema:
          type: string
      - in: query
        name: created_at
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at__lte
        schema:
          type: string
          format: date-time
      - in: query
        name: current_price
        schema:
          type: number
          format: double
      - in: query
        name: current_price__gt
        schema:
          type: number
          format: double
      - in: query
        name: current_price__gte
        schema:
          type: number
          format: double
      - in: query
        name: current_price__lt
        schema:
          type: number
          format: double
      - in: query
        name: current_price__lte
        schema:
          type: number
          format: double
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: is_visible
        schema:
          type: boolean
      - in: query
        name: manufacturer__name
        schema:
          type: string
      - in: query
        name: manufacturer__name__icontains
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: original_price
        schema:
          type: number
      - in: query
        name: original_price__gt
        schema:
          type: number
      - in: query
        name: original_price__gte
        schema:
          type: number
      - in: query
        name: original_price__lt
        schema:
          type: number
      - in: query
        name: original_price__lte
        schema:
          type: number
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: price
        schema:
          type: number
      - in: query
        name: price__gt
        schema:
          type: number
      - in: query
        name: price__gte
        schema:
          type: number
      - in: query
        name: price__lt
        schema:
          type: number
      - in: query
        name: price__lte
        schema:
          type: number
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: short_description
        schema:
          type: string
      - in: query
        name: short_description__icontains
        schema:
          type: string
      - in: query
        name: sku
        schema:
          type: string
      - in: query
        name: sku__icontains
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: slug__icontains
        schema:
          type: string
      - in: query
        name: stock_quantity
        schema:
          type: integer
      - in: query
        name: stock_quantity__gte
        schema:
          type: integer
      - in: query
        name: stock_quantity__lte
        schema:
          type: integer
      - in: query
        name: tags
        schema:
          type: string
      - in: query
        name: updated_at
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_at__gte
        schema:
          type: string
          format: date-time
      - in: query
        name: updated_at__lte
        schema:
          type: string
          format: date-time
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductListList'
          description: ''
    post:
      operationId: catalog_products_create
      description: ViewSet for Product model with advanced CRUD operations.
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
  /api/catalog/products/{id}/:
    get:
      operationId: catalog_products_retrieve
      description: ViewSet for Product model with advanced CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    put:
      operationId: catalog_products_update
      description: ViewSet for Product model with advanced CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductDetail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    patch:
      operationId: catalog_products_partial_update
      description: ViewSet for Product model with advanced CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductDetail'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetail'
          description: ''
    delete:
      operationId: catalog_products_destroy
      description: 'Soft delete: set is_visible=False instead of actually deleting.'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Product has been deactivated (hidden from catalog) due
                  to existing orders
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        message:
                          type: string
          description: ''
        '204':
          content:
            application/json:
              schema:
                description: Product has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/suppliers/:
    get:
      operationId: catalog_suppliers_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupplierList'
          description: ''
    post:
      operationId: catalog_suppliers_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/catalog/suppliers/{id}/:
    get:
      operationId: catalog_suppliers_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Supplier.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: catalog_suppliers_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Supplier.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: catalog_suppliers_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Supplier.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: catalog_suppliers_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Supplier.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/tags/:
    get:
      operationId: catalog_tags_list
      description: ViewSet for Tag model with CRUD operations.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: catalog_tags_create
      description: ViewSet for Tag model with CRUD operations.
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /api/catalog/tags/{id}/:
    get:
      operationId: catalog_tags_retrieve
      description: ViewSet for Tag model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: catalog_tags_update
      description: ViewSet for Tag model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: catalog_tags_partial_update
      description: ViewSet for Tag model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: catalog_tags_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag.
        required: true
      tags:
      - catalog
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/catalog/wishlist/:
    get:
      operationId: catalog_wishlist_list
      description: List all wishlist items for the current user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - wishlist
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WishlistItem'
          description: ''
    post:
      operationId: catalog_wishlist_create
      description: Create a new wishlist item
      tags:
      - wishlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WishlistItemCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WishlistItemCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WishlistItemCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: ''
  /api/catalog/wishlist/{id}/:
    get:
      operationId: catalog_wishlist_retrieve
      description: Retrieve a specific wishlist item
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - wishlist
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: ''
    put:
      operationId: catalog_wishlist_update
      description: Update a wishlist item
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - wishlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WishlistItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WishlistItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WishlistItem'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: ''
    patch:
      operationId: catalog_wishlist_partial_update
      description: Partially update a wishlist item
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - wishlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWishlistItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWishlistItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWishlistItem'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistItem'
          description: ''
    delete:
      operationId: catalog_wishlist_destroy
      description: Delete a wishlist item
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - wishlist
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/catalog/wishlist/check/{product_id}/:
    get:
      operationId: catalog_wishlist_check_retrieve
      description: Check if a product is in wishlist
      parameters:
      - in: path
        name: product_id
        schema:
          type: integer
        required: true
      tags:
      - wishlist
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WishlistCheck'
          description: ''
  /api/checkout/carts/:
    get:
      operationId: checkout_carts_list
      description: ViewSet for Cart model with CRUD operations.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartListList'
          description: ''
    post:
      operationId: checkout_carts_create
      description: ViewSet for Cart model with CRUD operations.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/checkout/carts/{id}/:
    get:
      operationId: checkout_carts_retrieve
      description: ViewSet for Cart model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: checkout_carts_update
      description: ViewSet for Cart model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: checkout_carts_partial_update
      description: ViewSet for Cart model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: checkout_carts_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/carts/current/:
    get:
      operationId: checkout_carts_current_retrieve
      description: Get current user's active cart.
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/checkout/confirm_payment_intent/:
    post:
      operationId: checkout_confirm_payment_intent_create
      description: Confirm PaymentIntent and create order after successful PaymentSheet
        payment.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmPayment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentConfirmationResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '500':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/checkout/coupon-redemptions/:
    get:
      operationId: checkout_coupon_redemptions_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCouponRedemptionList'
          description: ''
    post:
      operationId: checkout_coupon_redemptions_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponRedemption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponRedemption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponRedemption'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponRedemption'
          description: ''
  /api/checkout/coupon-redemptions/{id}/:
    get:
      operationId: checkout_coupon_redemptions_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon Redemption.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponRedemption'
          description: ''
    put:
      operationId: checkout_coupon_redemptions_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon Redemption.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponRedemption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponRedemption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponRedemption'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponRedemption'
          description: ''
    patch:
      operationId: checkout_coupon_redemptions_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon Redemption.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCouponRedemption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCouponRedemption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCouponRedemption'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponRedemption'
          description: ''
    delete:
      operationId: checkout_coupon_redemptions_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon Redemption.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/coupons/:
    get:
      operationId: checkout_coupons_list
      description: Full CRUD ViewSet for coupon management.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCouponList'
          description: ''
    post:
      operationId: checkout_coupons_create
      description: Full CRUD ViewSet for coupon management.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
  /api/checkout/coupons/{id}/:
    get:
      operationId: checkout_coupons_retrieve
      description: Full CRUD ViewSet for coupon management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
    put:
      operationId: checkout_coupons_update
      description: Full CRUD ViewSet for coupon management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
    patch:
      operationId: checkout_coupons_partial_update
      description: Full CRUD ViewSet for coupon management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
    delete:
      operationId: checkout_coupons_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Coupon.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/coupons/remove/:
    post:
      operationId: checkout_coupons_remove_create
      description: Remove the currently applied coupon from the user's active cart
      summary: Remove coupon from cart
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
  /api/checkout/coupons/validate/:
    post:
      operationId: checkout_coupons_validate_create
      description: Validate and apply coupon to cart
      summary: Validate coupon
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponValidateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CouponValidateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CouponValidateRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponValidationResponse'
          description: ''
  /api/checkout/couriers/:
    get:
      operationId: checkout_couriers_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourierList'
          description: ''
    post:
      operationId: checkout_couriers_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Courier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Courier'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courier'
          description: ''
  /api/checkout/couriers/{id}/:
    get:
      operationId: checkout_couriers_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Courier.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courier'
          description: ''
    put:
      operationId: checkout_couriers_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Courier.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Courier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Courier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Courier'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courier'
          description: ''
    patch:
      operationId: checkout_couriers_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Courier.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourier'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courier'
          description: ''
    delete:
      operationId: checkout_couriers_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Courier.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/create_checkout_session/:
    post:
      operationId: checkout_create_checkout_session_create
      description: Create a Stripe Checkout session for a cart.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSessionResponse'
          description: ''
  /api/checkout/dashboard/:
    get:
      operationId: checkout_dashboard_retrieve
      description: Get dashboard statistics for the given period (24h, 7d, 30d, lifetime)
      summary: Dashboard analytics
      parameters:
      - in: query
        name: period
        schema:
          type: string
        description: 24h | 7d | 30d | lifetime
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardStats'
          description: ''
  /api/checkout/invoice-templates/:
    get:
      operationId: checkout_invoice_templates_list
      description: ViewSet for managing invoice templates.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    post:
      operationId: checkout_invoice_templates_create
      description: ViewSet for managing invoice templates.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
  /api/checkout/invoice-templates/{id}/:
    get:
      operationId: checkout_invoice_templates_retrieve
      description: ViewSet for managing invoice templates.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice Template.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    put:
      operationId: checkout_invoice_templates_update
      description: ViewSet for managing invoice templates.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice Template.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    patch:
      operationId: checkout_invoice_templates_partial_update
      description: ViewSet for managing invoice templates.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice Template.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    delete:
      operationId: checkout_invoice_templates_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice Template.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/invoice-templates/variables/:
    get:
      operationId: checkout_invoice_templates_variables_retrieve
      description: Validates Jinja2 template syntax and checks for forbidden properties
      summary: Validate template syntax and security
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateValidationResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateValidationError'
          description: ''
  /api/checkout/invoices/:
    get:
      operationId: checkout_invoices_list
      description: ViewSet for managing invoices.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
          description: ''
    post:
      operationId: checkout_invoices_create
      description: ViewSet for managing invoices.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
  /api/checkout/invoices/{id}/:
    get:
      operationId: checkout_invoices_retrieve
      description: ViewSet for managing invoices.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    put:
      operationId: checkout_invoices_update
      description: ViewSet for managing invoices.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invoice'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    patch:
      operationId: checkout_invoices_partial_update
      description: ViewSet for managing invoices.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoice'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: ''
    delete:
      operationId: checkout_invoices_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Invoice.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/invoices/download_by_order/:
    get:
      operationId: checkout_invoices_download_by_order_retrieve
      description: Downloads the PDF invoice for a specific order
      summary: Download invoice PDF by order
      parameters:
      - in: query
        name: order_id
        schema:
          type: integer
        description: ID of the order to generate invoice for
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: Invoice PDF file.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceNotFound'
          description: ''
  /api/checkout/items/:
    get:
      operationId: checkout_items_list
      description: ViewSet for CartItem model with CRUD operations.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
          description: ''
    post:
      operationId: checkout_items_create
      description: ViewSet for CartItem model with CRUD operations.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItemCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItemCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItemCreate'
          description: ''
  /api/checkout/items/{id}/:
    get:
      operationId: checkout_items_retrieve
      description: ViewSet for CartItem model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    put:
      operationId: checkout_items_update
      description: ViewSet for CartItem model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    patch:
      operationId: checkout_items_partial_update
      description: ViewSet for CartItem model with CRUD operations.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    delete:
      operationId: checkout_items_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/items/{id}/decrease_quantity/:
    post:
      operationId: checkout_items_decrease_quantity_create
      description: Decrease item quantity.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/checkout/items/{id}/increase_quantity/:
    post:
      operationId: checkout_items_increase_quantity_create
      description: Increase item quantity.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/checkout/items/{id}/update_quantity/:
    post:
      operationId: checkout_items_update_quantity_create
      description: Update item quantity.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/checkout/order-notes/:
    get:
      operationId: checkout_order_notes_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderProcessingNoteList'
          description: ''
    post:
      operationId: checkout_order_notes_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProcessingNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderProcessingNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderProcessingNote'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProcessingNote'
          description: ''
  /api/checkout/order-notes/{id}/:
    get:
      operationId: checkout_order_notes_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order Processing Note.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProcessingNote'
          description: ''
    put:
      operationId: checkout_order_notes_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order Processing Note.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProcessingNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderProcessingNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderProcessingNote'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProcessingNote'
          description: ''
    patch:
      operationId: checkout_order_notes_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order Processing Note.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderProcessingNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderProcessingNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderProcessingNote'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProcessingNote'
          description: ''
    delete:
      operationId: checkout_order_notes_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Order Processing Note.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/orders/:
    get:
      operationId: checkout_orders_list
      description: Retrieve a list of orders for the current user
      summary: Get current user's orders
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrdersListResponseList'
          description: ''
    post:
      operationId: checkout_orders_create
      description: 'Orders: users read their own; employees/admins full CRUD across
        all.'
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/checkout/orders/{id}/:
    get:
      operationId: checkout_orders_retrieve
      description: Retrieve details of a specific order
      summary: Get order details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetail'
          description: ''
    put:
      operationId: checkout_orders_update
      description: 'Orders: users read their own; employees/admins full CRUD across
        all.'
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: checkout_orders_partial_update
      description: 'Orders: users read their own; employees/admins full CRUD across
        all.'
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: checkout_orders_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/orders/export.csv:
    get:
      operationId: checkout_orders_export.csv_retrieve
      description: Download CSV of orders for the given period (24h, 7d, 30d, lifetime)
      summary: Export orders CSV
      parameters:
      - in: query
        name: period
        schema:
          type: string
        description: 24h | 7d | 30d | lifetime
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
                format: binary
          description: CSV file (text/csv)
  /api/checkout/payments/:
    get:
      operationId: checkout_payments_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentList'
          description: ''
    post:
      operationId: checkout_payments_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
  /api/checkout/payments/{id}/:
    get:
      operationId: checkout_payments_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    put:
      operationId: checkout_payments_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Payment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    patch:
      operationId: checkout_payments_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: ''
    delete:
      operationId: checkout_payments_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this payment.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/shipments/:
    get:
      operationId: checkout_shipments_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShipmentList'
          description: ''
    post:
      operationId: checkout_shipments_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shipment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shipment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: ''
  /api/checkout/shipments/{id}/:
    get:
      operationId: checkout_shipments_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipment.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: ''
    put:
      operationId: checkout_shipments_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipment.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shipment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Shipment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Shipment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: ''
    patch:
      operationId: checkout_shipments_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipment.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShipment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShipment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShipment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: ''
    delete:
      operationId: checkout_shipments_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipment.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/checkout/shipping-methods/:
    get:
      operationId: checkout_shipping_methods_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShippingMethod'
          description: ''
    post:
      operationId: checkout_shipping_methods_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShippingMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShippingMethod'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethod'
          description: ''
  /api/checkout/shipping-methods/{id}/:
    get:
      operationId: checkout_shipping_methods_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipping Method.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethod'
          description: ''
    put:
      operationId: checkout_shipping_methods_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipping Method.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShippingMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShippingMethod'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethod'
          description: ''
    patch:
      operationId: checkout_shipping_methods_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipping Method.
        required: true
      tags:
      - checkout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedShippingMethod'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedShippingMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedShippingMethod'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingMethod'
          description: ''
    delete:
      operationId: checkout_shipping_methods_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Shipping Method.
        required: true
      tags:
      - checkout
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/geographic/countries/:
    get:
      operationId: geographic_countries_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - geographic
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryList'
          description: ''
    post:
      operationId: geographic_countries_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - geographic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryCreate'
          description: ''
  /api/geographic/countries/{id}/:
    get:
      operationId: geographic_countries_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - geographic
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: geographic_countries_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - geographic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountryUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CountryUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CountryUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryUpdate'
          description: ''
    patch:
      operationId: geographic_countries_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - geographic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountryUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountryUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountryUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryUpdate'
          description: ''
    delete:
      operationId: geographic_countries_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - geographic
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/profile/addresses/:
    get:
      operationId: profile_addresses_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressList'
          description: ''
    post:
      operationId: profile_addresses_create
      description: Create a new address. Profile field is optional - if not provided,
        uses current user's profile.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/profile/addresses/{id}/:
    get:
      operationId: profile_addresses_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: profile_addresses_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUpdate'
          description: ''
    patch:
      operationId: profile_addresses_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddressUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressUpdate'
          description: ''
    delete:
      operationId: profile_addresses_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          content:
            application/json:
              schema:
                description: Item has been deleted successfully
          description: ''
        '500':
          content:
            application/json:
              schema:
                description: Server error - cannot delete due to foreign key constraints
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        detail:
                          type: string
          description: ''
  /api/profile/profiles/:
    get:
      operationId: profile_profiles_list
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileListList'
          description: ''
    post:
      operationId: profile_profiles_create
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCreate'
          description: ''
  /api/profile/profiles/{id}/:
    get:
      operationId: profile_profiles_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: profile_profiles_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileUpdate'
          description: ''
    patch:
      operationId: profile_profiles_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileUpdate'
          description: ''
    delete:
      operationId: profile_profiles_destroy
      description: Handle deletion with foreign key constraint protection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/profile/profiles/checkout_status/:
    get:
      operationId: profile_profiles_checkout_status_retrieve
      description: Get checkout readiness status for the current user's profile.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/profile/profiles/me/:
    get:
      operationId: profile_profiles_me_retrieve
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: profile_profiles_me_partial_update
      description: |-
        Base ViewSet with built-in ProtectedError handling for delete operations.
        All ViewSets should inherit from this instead of ModelViewSet directly.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/ProfileMinimal'
          readOnly: true
        address:
          type: string
          description: Street address, apartment, unit, etc.
          maxLength: 255
        city:
          type: string
          description: City name
          maxLength: 100
        postal_code:
          type: string
          description: ZIP code or postal code
          maxLength: 20
        country:
          type: integer
          description: Country for this address
        is_default:
          type: boolean
          description: Whether this is the default address
        label:
          type: string
          description: Optional label like 'Home', 'Office', etc.
          maxLength: 50
        full_address:
          type: string
          readOnly: true
        address_dict:
          type: object
          additionalProperties: {}
          readOnly: true
        is_complete:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - address
      - address_dict
      - city
      - country
      - created_at
      - full_address
      - id
      - is_complete
      - postal_code
      - profile
      - updated_at
    AddressCreate:
      type: object
      properties:
        profile:
          type: integer
          description: Profile ID to assign this address to. If not provided, uses
            current user's profile.
        address:
          type: string
          description: Street address, apartment, unit, etc.
          maxLength: 255
        city:
          type: string
          description: City name
          maxLength: 100
        postal_code:
          type: string
          description: ZIP code or postal code
          maxLength: 20
        country:
          type: integer
          description: Country for this address
        is_default:
          type: boolean
          description: Whether this is the default address
        label:
          type: string
          description: Optional label like 'Home', 'Office', etc.
          maxLength: 50
      required:
      - address
      - city
      - country
      - postal_code
    AddressList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        profile:
          allOf:
          - $ref: '#/components/schemas/ProfileMinimal'
          readOnly: true
        full_address:
          type: string
          readOnly: true
        label:
          type: string
          description: Optional label like 'Home', 'Office', etc.
          maxLength: 50
        is_default:
          type: boolean
          description: Whether this is the default address
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - created_at
      - full_address
      - id
      - profile
    AddressUpdate:
      type: object
      properties:
        address:
          type: string
          description: Street address, apartment, unit, etc.
          maxLength: 255
        city:
          type: string
          description: City name
          maxLength: 100
        postal_code:
          type: string
          description: ZIP code or postal code
          maxLength: 20
        country:
          type: integer
          description: Country for this address
        is_default:
          type: boolean
          description: Whether this is the default address
        label:
          type: string
          description: Optional label like 'Home', 'Office', etc.
          maxLength: 50
      required:
      - address
      - city
      - country
      - postal_code
    Cart:
      type: object
      description: Serializer for Cart model.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
          description: User who owns this cart
        status:
          allOf:
          - $ref: '#/components/schemas/CartStatusEnum'
          description: |-
            Current status of the cart

            * `active` - Active
            * `converted` - Converted to Order
            * `abandoned` - Abandoned
            * `expired` - Expired
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        shipping_method:
          allOf:
          - $ref: '#/components/schemas/ShippingMethod'
          readOnly: true
        applied_coupon:
          allOf:
          - $ref: '#/components/schemas/Coupon'
          readOnly: true
        item_count:
          type: integer
          description: Get total number of items in cart.
          readOnly: true
        subtotal:
          type: number
          format: double
          description: Get subtotal of all items in cart.
          readOnly: true
        shipping_cost:
          type: number
          format: double
          description: Get shipping cost from selected shipping method.
          readOnly: true
        coupon_discount:
          type: number
          format: double
          description: Get coupon discount amount.
          readOnly: true
        total:
          type: number
          format: double
          description: Get total including shipping.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - applied_coupon
      - coupon_discount
      - created_at
      - id
      - item_count
      - items
      - shipping_address
      - shipping_cost
      - shipping_method
      - subtotal
      - total
      - updated_at
      - user
    CartItem:
      type: object
      description: Serializer for CartItem model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductList'
          readOnly: true
        product_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Quantity of this product in cart
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          description: Price per unit when added to cart
        total_price:
          type: number
          format: double
          description: Get total price for this item.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - id
      - product
      - product_id
      - total_price
      - unit_price
      - updated_at
    CartItemCreate:
      type: object
      description: Serializer for creating cart items.
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Quantity of this product in cart
      required:
      - product_id
    CartList:
      type: object
      description: Simplified cart serializer for list views.
      properties:
        id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/CartStatusEnum'
          description: |-
            Current status of the cart

            * `active` - Active
            * `converted` - Converted to Order
            * `abandoned` - Abandoned
            * `expired` - Expired
        item_count:
          type: integer
          description: Get total number of items in cart.
          readOnly: true
        subtotal:
          type: number
          format: double
          description: Get subtotal of all items in cart.
          readOnly: true
        shipping_cost:
          type: number
          format: double
          description: Get shipping cost from selected shipping method.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - created_at
      - id
      - item_count
      - shipping_cost
      - subtotal
    CartStatusEnum:
      enum:
      - active
      - converted
      - abandoned
      - expired
      type: string
      description: |-
        * `active` - Active
        * `converted` - Converted to Order
        * `abandoned` - Abandoned
        * `expired` - Expired
    Category:
      type: object
      description: Serializer for Category model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Category name
          maxLength: 100
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Category description
        is_active:
          type: boolean
          description: Whether this category is visible
        active_product_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - active_product_count
      - created_at
      - id
      - name
      - slug
      - updated_at
    CheckoutSessionResponse:
      type: object
      description: Serializer for payment intent response (PaymentSheet).
      properties:
        client_secret:
          type: string
        payment_intent_id:
          type: string
        payment_id:
          type: integer
      required:
      - client_secret
      - payment_id
      - payment_intent_id
    ConfirmPayment:
      type: object
      description: Serializer for confirming payment.
      properties:
        session_id:
          type: string
          description: Stripe checkout session ID
      required:
      - session_id
    Country:
      type: object
      description: Full country serializer with all fields.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: alpha-2 country code (e.g., PL, US, GB)
          maxLength: 2
        name:
          type: string
          description: Official country name in English
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - code
      - created_at
      - id
      - name
      - updated_at
    CountryCreate:
      type: object
      description: Serializer for creating new countries (admin only).
      properties:
        code:
          type: string
          description: alpha-2 country code (e.g., PL, US, GB)
          maxLength: 2
        name:
          type: string
          description: Official country name in English
          maxLength: 100
      required:
      - code
      - name
    CountryList:
      type: object
      description: Simplified country serializer for list views.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: alpha-2 country code (e.g., PL, US, GB)
          maxLength: 2
        name:
          type: string
          description: Official country name in English
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - code
      - created_at
      - id
      - name
      - updated_at
    CountryUpdate:
      type: object
      description: Serializer for updating countries (admin only).
      properties:
        code:
          type: string
          description: alpha-2 country code (e.g., PL, US, GB)
          maxLength: 2
        name:
          type: string
          description: Official country name in English
          maxLength: 100
      required:
      - code
      - name
    Coupon:
      type: object
      description: Serializer for coupon list and detail views.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: Coupon code
          maxLength: 20
        name:
          type: string
          description: Display name
          maxLength: 100
        description:
          type: string
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Fixed discount amount
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        max_uses:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum total uses (null = unlimited)
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum uses per user
        usage_count:
          type: integer
          readOnly: true
      required:
      - code
      - discount_amount
      - id
      - name
      - usage_count
      - valid_from
      - valid_until
    CouponRedemption:
      type: object
      description: Serializer for coupon redemption tracking.
      properties:
        id:
          type: integer
          readOnly: true
        coupon:
          allOf:
          - $ref: '#/components/schemas/Coupon'
          readOnly: true
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        original_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        final_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - coupon
      - created_at
      - discount_amount
      - final_total
      - id
      - original_total
    CouponUsage:
      type: object
      properties:
        used:
          type: integer
        total:
          type: integer
      required:
      - total
      - used
    CouponValidateRequest:
      type: object
      properties:
        code:
          type: string
          maxLength: 20
      required:
      - code
    CouponValidationResponse:
      type: object
      description: Serializer for coupon validation response.
      properties:
        coupon:
          $ref: '#/components/schemas/Coupon'
        applied_discount:
          type: string
        cart_total:
          type: string
      required:
      - applied_discount
      - cart_total
      - coupon
    Courier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Courier company name
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - id
      - name
      - updated_at
    CreateCheckoutSession:
      type: object
      description: Serializer for creating payment intent (PaymentSheet).
      properties:
        currency:
          type: string
          default: usd
          description: 'Currency code (default: usd)'
          maxLength: 3
        shipping_address_id:
          type: integer
          description: ID of the shipping address to use for this order
        shipping_method_id:
          type: integer
          description: ID of the shipping method to use for this order
      required:
      - shipping_address_id
      - shipping_method_id
    DashboardStats:
      type: object
      description: Serializer for dashboard analytics response.
      properties:
        period:
          type: string
        orders_count:
          type: integer
        revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        avg_order:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        items_sold:
          type: integer
        shipping_methods:
          $ref: '#/components/schemas/ShippingMethods'
        products:
          $ref: '#/components/schemas/Products'
        manufacturers:
          type: array
          items:
            $ref: '#/components/schemas/ManufacturerEntry'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagEntry'
        coupon_usage:
          $ref: '#/components/schemas/CouponUsage'
      required:
      - avg_order
      - coupon_usage
      - items_sold
      - manufacturers
      - orders_count
      - period
      - products
      - revenue
      - shipping_methods
      - tags
    Invoice:
      type: object
      description: Serializer for invoices.
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          description: Order this invoice is for
        order_number:
          type: string
          readOnly: true
        invoice_number:
          type: string
          readOnly: true
          description: Unique invoice number
        html_content:
          type: string
          description: Rendered HTML content of the invoice
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - html_content
      - id
      - invoice_number
      - order
      - order_number
      - updated_at
    InvoiceNotFound:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    InvoiceTemplate:
      type: object
      description: Serializer for invoice templates.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Template name (e.g., 'Standard Invoice')
          maxLength: 100
        content:
          type: string
          description: Jinja2 template content with HTML
        is_default:
          type: boolean
          description: Use as default template for automatic invoice generation
        created_by:
          type: integer
          readOnly: true
          description: User who created this template
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - content
      - created_at
      - created_by
      - created_by_name
      - id
      - name
      - updated_at
    Manufacturer:
      type: object
      description: Serializer for Manufacturer model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Manufacturer name
          maxLength: 100
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Manufacturer description
        website:
          type: string
          description: Manufacturer website URL
          maxLength: 200
        is_active:
          type: boolean
          description: Whether this manufacturer is visible
        active_product_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - active_product_count
      - created_at
      - id
      - name
      - slug
      - updated_at
    ManufacturerCreate:
      type: object
      description: Serializer for creating new manufacturers (admin only).
      properties:
        name:
          type: string
          description: Manufacturer name
          maxLength: 100
        description:
          type: string
          description: Manufacturer description
        website:
          type: string
          description: Manufacturer website URL
          maxLength: 200
        is_active:
          type: boolean
          description: Whether this manufacturer is visible
      required:
      - name
    ManufacturerEntry:
      type: object
      properties:
        name:
          type: string
        qty:
          type: integer
      required:
      - name
      - qty
    ManufacturerList:
      type: object
      description: Simplified manufacturer serializer for list views.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Manufacturer name
          maxLength: 100
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        is_active:
          type: boolean
          description: Whether this manufacturer is visible
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - created_at
      - id
      - name
      - slug
    ManufacturerUpdate:
      type: object
      description: Serializer for updating manufacturers (admin only).
      properties:
        name:
          type: string
          description: Manufacturer name
          maxLength: 100
        description:
          type: string
          description: Manufacturer description
        website:
          type: string
          description: Manufacturer website URL
          maxLength: 200
        is_active:
          type: boolean
          description: Whether this manufacturer is visible
      required:
      - name
    NotificationHistory:
      type: object
      description: Serializer for NotificationHistory model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          description: Product the notification was about
        product_name:
          type: string
          readOnly: true
        product_image:
          type: string
          readOnly: true
        notification_type:
          allOf:
          - $ref: '#/components/schemas/NotificationTypeEnum'
          description: |-
            Type of notification sent

            * `stock_available` - Stock Available
            * `price_drop` - Price Drop
        title:
          type: string
          description: Notification title
          maxLength: 255
        body:
          type: string
          description: Notification body text
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - body
      - created_at
      - id
      - notification_type
      - product
      - product_image
      - product_name
      - title
    NotificationPreference:
      type: object
      description: Serializer for NotificationPreference model.
      properties:
        id:
          type: integer
          readOnly: true
        stock_alerts_enabled:
          type: boolean
          description: Receive alerts when out-of-stock wishlist items become available
        price_drop_alerts_enabled:
          type: boolean
          description: Receive alerts when wishlist items go on sale
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - id
      - updated_at
    NotificationPreferenceUpdate:
      type: object
      description: Serializer for updating notification preferences.
      properties:
        stock_alerts_enabled:
          type: boolean
          description: Receive alerts when out-of-stock wishlist items become available
        price_drop_alerts_enabled:
          type: boolean
          description: Receive alerts when wishlist items go on sale
    NotificationTypeEnum:
      enum:
      - stock_available
      - price_drop
      type: string
      description: |-
        * `stock_available` - Stock Available
        * `price_drop` - Price Drop
    Order:
      type: object
      description: Serializer for order list view.
      properties:
        id:
          type: integer
          readOnly: true
        order_number:
          type: string
          description: Unique order number
          maxLength: 50
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          description: |-
            Current status of the order

            * `pending` - Pending
            * `confirmed` - Confirmed
            * `shipped` - Shipped
            * `delivered` - Delivered
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Subtotal of all items
        shipping_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Shipping cost
        coupon_discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Discount amount from applied coupon
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total amount including shipping
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - created_at
      - id
      - order_number
      - subtotal
      - total
    OrderDetail:
      type: object
      description: Serializer for order detail view.
      properties:
        id:
          type: integer
          readOnly: true
        order_number:
          type: string
          description: Unique order number
          maxLength: 50
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Subtotal of all items
        shipping_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        coupon_discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Discount amount from applied coupon
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total amount including shipping
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        notes:
          type: string
          description: Additional notes for the order
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        shipping_method:
          allOf:
          - $ref: '#/components/schemas/ShippingMethod'
          readOnly: true
        applied_coupon:
          allOf:
          - $ref: '#/components/schemas/Coupon'
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
      required:
      - applied_coupon
      - created_at
      - id
      - items
      - order_number
      - shipping_address
      - shipping_cost
      - shipping_method
      - status
      - subtotal
      - total
    OrderItem:
      type: object
      description: Serializer for order items.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductDetail'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Quantity ordered
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Price per unit at time of order
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total price for this item (quantity × unit_price)
      required:
      - id
      - product
      - quantity
      - total_price
      - unit_price
    OrderProcessingNote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          description: Order this note relates to
        order_number:
          type: string
          readOnly: true
        staff_member:
          type: integer
          readOnly: true
          description: Staff member who created this note
        staff_member_name:
          type: string
          readOnly: true
        note:
          type: string
          description: Note content
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - id
      - note
      - order
      - order_number
      - staff_member
      - staff_member_name
      - updated_at
    OrderStatusEnum:
      enum:
      - pending
      - confirmed
      - shipped
      - delivered
      type: string
      description: |-
        * `pending` - Pending
        * `confirmed` - Confirmed
        * `shipped` - Shipped
        * `delivered` - Delivered
    OrdersListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      required:
      - results
    PaginatedCartListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CartList'
    PaginatedCouponList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
    PaginatedCouponRedemptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CouponRedemption'
    PaginatedCourierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Courier'
    PaginatedNotificationHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationHistory'
    PaginatedOrderProcessingNoteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrderProcessingNote'
    PaginatedOrdersListResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrdersListResponse'
    PaginatedPaymentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    PaginatedProductDeliveryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductDelivery'
    PaginatedProductListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductList'
    PaginatedProfileListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfileList'
    PaginatedShipmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Shipment'
    PaginatedSupplierList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
    PaginatedTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PatchedAddressUpdate:
      type: object
      properties:
        address:
          type: string
          description: Street address, apartment, unit, etc.
          maxLength: 255
        city:
          type: string
          description: City name
          maxLength: 100
        postal_code:
          type: string
          description: ZIP code or postal code
          maxLength: 20
        country:
          type: integer
          description: Country for this address
        is_default:
          type: boolean
          description: Whether this is the default address
        label:
          type: string
          description: Optional label like 'Home', 'Office', etc.
          maxLength: 50
    PatchedCart:
      type: object
      description: Serializer for Cart model.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          nullable: true
          description: User who owns this cart
        status:
          allOf:
          - $ref: '#/components/schemas/CartStatusEnum'
          description: |-
            Current status of the cart

            * `active` - Active
            * `converted` - Converted to Order
            * `abandoned` - Abandoned
            * `expired` - Expired
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
        shipping_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        shipping_method:
          allOf:
          - $ref: '#/components/schemas/ShippingMethod'
          readOnly: true
        applied_coupon:
          allOf:
          - $ref: '#/components/schemas/Coupon'
          readOnly: true
        item_count:
          type: integer
          description: Get total number of items in cart.
          readOnly: true
        subtotal:
          type: number
          format: double
          description: Get subtotal of all items in cart.
          readOnly: true
        shipping_cost:
          type: number
          format: double
          description: Get shipping cost from selected shipping method.
          readOnly: true
        coupon_discount:
          type: number
          format: double
          description: Get coupon discount amount.
          readOnly: true
        total:
          type: number
          format: double
          description: Get total including shipping.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedCartItem:
      type: object
      description: Serializer for CartItem model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductList'
          readOnly: true
        product_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Quantity of this product in cart
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          description: Price per unit when added to cart
        total_price:
          type: number
          format: double
          description: Get total price for this item.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedCategory:
      type: object
      description: Serializer for Category model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Category name
          maxLength: 100
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Category description
        is_active:
          type: boolean
          description: Whether this category is visible
        active_product_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedCountryUpdate:
      type: object
      description: Serializer for updating countries (admin only).
      properties:
        code:
          type: string
          description: alpha-2 country code (e.g., PL, US, GB)
          maxLength: 2
        name:
          type: string
          description: Official country name in English
          maxLength: 100
    PatchedCoupon:
      type: object
      description: Serializer for coupon list and detail views.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          description: Coupon code
          maxLength: 20
        name:
          type: string
          description: Display name
          maxLength: 100
        description:
          type: string
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Fixed discount amount
        valid_from:
          type: string
          format: date-time
        valid_until:
          type: string
          format: date-time
        max_uses:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          description: Maximum total uses (null = unlimited)
        max_uses_per_user:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Maximum uses per user
        usage_count:
          type: integer
          readOnly: true
    PatchedCouponRedemption:
      type: object
      description: Serializer for coupon redemption tracking.
      properties:
        id:
          type: integer
          readOnly: true
        coupon:
          allOf:
          - $ref: '#/components/schemas/Coupon'
          readOnly: true
        discount_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        original_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        final_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
    PatchedCourier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Courier company name
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedInvoice:
      type: object
      description: Serializer for invoices.
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          description: Order this invoice is for
        order_number:
          type: string
          readOnly: true
        invoice_number:
          type: string
          readOnly: true
          description: Unique invoice number
        html_content:
          type: string
          description: Rendered HTML content of the invoice
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedInvoiceTemplate:
      type: object
      description: Serializer for invoice templates.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Template name (e.g., 'Standard Invoice')
          maxLength: 100
        content:
          type: string
          description: Jinja2 template content with HTML
        is_default:
          type: boolean
          description: Use as default template for automatic invoice generation
        created_by:
          type: integer
          readOnly: true
          description: User who created this template
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedManufacturer:
      type: object
      description: Serializer for Manufacturer model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Manufacturer name
          maxLength: 100
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 100
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Manufacturer description
        website:
          type: string
          description: Manufacturer website URL
          maxLength: 200
        is_active:
          type: boolean
          description: Whether this manufacturer is visible
        active_product_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedNotificationHistory:
      type: object
      description: Serializer for NotificationHistory model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          description: Product the notification was about
        product_name:
          type: string
          readOnly: true
        product_image:
          type: string
          readOnly: true
        notification_type:
          allOf:
          - $ref: '#/components/schemas/NotificationTypeEnum'
          description: |-
            Type of notification sent

            * `stock_available` - Stock Available
            * `price_drop` - Price Drop
        title:
          type: string
          description: Notification title
          maxLength: 255
        body:
          type: string
          description: Notification body text
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
    PatchedNotificationPreferenceUpdate:
      type: object
      description: Serializer for updating notification preferences.
      properties:
        stock_alerts_enabled:
          type: boolean
          description: Receive alerts when out-of-stock wishlist items become available
        price_drop_alerts_enabled:
          type: boolean
          description: Receive alerts when wishlist items go on sale
    PatchedOrder:
      type: object
      description: Serializer for order list view.
      properties:
        id:
          type: integer
          readOnly: true
        order_number:
          type: string
          description: Unique order number
          maxLength: 50
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          description: |-
            Current status of the order

            * `pending` - Pending
            * `confirmed` - Confirmed
            * `shipped` - Shipped
            * `delivered` - Delivered
        subtotal:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Subtotal of all items
        shipping_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Shipping cost
        coupon_discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Discount amount from applied coupon
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Total amount including shipping
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
    PatchedOrderProcessingNote:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          description: Order this note relates to
        order_number:
          type: string
          readOnly: true
        staff_member:
          type: integer
          readOnly: true
          description: Staff member who created this note
        staff_member_name:
          type: string
          readOnly: true
        note:
          type: string
          description: Note content
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedPayment:
      type: object
      description: Serializer for Payment model.
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          description: |-
            Current status of the payment

            * `pending` - Pending
            * `completed` - Completed
            * `failed` - Failed
            * `canceled` - Canceled
        stripe_payment_intent_id:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedProductDelivery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier:
          type: integer
          description: Supplier who delivered the products
        supplier_name:
          type: string
          readOnly: true
        product:
          type: integer
          description: Product that was delivered
        product_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Quantity of products delivered
        delivery_date:
          type: string
          format: date-time
          description: When the delivery was received
        cost_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Cost per unit for this delivery
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedProductDetail:
      type: object
      description: Detailed serializer for product detail views.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 200
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Detailed product description
        short_description:
          type: string
          description: Short description for listings
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Product price
        original_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Original price for showing discounts
        current_price:
          type: string
          description: Get current price as formatted decimal string.
          readOnly: true
        discount_percentage:
          type: integer
          description: Calculate discount percentage.
          readOnly: true
        sku:
          type: string
          description: Unique product identifier
          maxLength: 100
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Available quantity in stock
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        manufacturer:
          allOf:
          - $ref: '#/components/schemas/Manufacturer'
          readOnly: true
        manufacturer_id:
          type: integer
          writeOnly: true
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        tag_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        is_visible:
          type: boolean
          description: Is product visible to the users
        sale_start:
          type: string
          format: date-time
          nullable: true
        sale_end:
          type: string
          format: date-time
          nullable: true
        is_on_sale:
          type: boolean
          readOnly: true
        is_in_stock:
          type: boolean
          description: Check if product is in stock.
          readOnly: true
        is_available:
          type: boolean
          description: Check if product is available for purchase.
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedProductImage:
      type: object
      description: Serializer for ProductImage model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          description: Associated product
        image:
          type: string
          format: uri
          description: Product image
        image_url:
          type: string
          nullable: true
          readOnly: true
        is_primary:
          type: boolean
          description: Whether this is the primary product image
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order of images
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: User's date of birth
        phone_number:
          type: string
          description: 'Phone number in international format. Supports digits, spaces,
            hyphens, parentheses, and optional ''+'' prefix. Example: +48131012012'
          pattern: ^\+?[\d\s\-\(\)]+$
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          minimum: -2147483648
          maximum: 2147483647
        profile_completed:
          type: boolean
          readOnly: true
          description: Whether profile has all required information for checkout
        display_name:
          type: string
          readOnly: true
        full_name:
          type: string
          readOnly: true
        age:
          type: integer
          readOnly: true
        is_checkout_ready:
          type: boolean
          readOnly: true
        missing_checkout_fields:
          type: array
          items: {}
          readOnly: true
        shipping_address:
          type: object
          additionalProperties: {}
          readOnly: true
        billing_address:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedProfileUpdate:
      type: object
      properties:
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: User's date of birth
        phone_number:
          type: string
          description: 'Phone number in international format. Supports digits, spaces,
            hyphens, parentheses, and optional ''+'' prefix. Example: +48131012012'
          pattern: ^\+?[\d\s\-\(\)]+$
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          minimum: -2147483648
          maximum: 2147483647
    PatchedShipment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
          description: Order this shipment is for
        order_number:
          type: string
          description: Unique order number
          readOnly: true
        order_status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          description: |-
            Current status of the order

            * `pending` - Pending
            * `confirmed` - Confirmed
            * `shipped` - Shipped
            * `delivered` - Delivered
          readOnly: true
        order_user_email:
          type: string
          format: email
          title: Email address
          readOnly: true
        shipping_method:
          type: string
          readOnly: true
        courier:
          type: string
          readOnly: true
        shipped_at:
          type: string
          format: date-time
          nullable: true
          description: When the package was shipped
        delivered_at:
          type: string
          format: date-time
          nullable: true
          description: When the package was delivered
        shipping_address:
          type: string
          description: Shipping address at time of shipment
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedShippingMethod:
      type: object
      description: Serializer for ShippingMethod model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of the shipping method (e.g., 'Standard', 'Express')
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Shipping cost
        courier:
          type: integer
          description: Courier company providing this shipping method
    PatchedSupplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Supplier company name
          maxLength: 100
        contact_email:
          type: string
          format: email
          description: Primary contact email
          maxLength: 254
        phone:
          type: string
          description: Contact phone number
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedTag:
      type: object
      description: Serializer for Tag model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Tag name
          maxLength: 50
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
    PatchedWishlistItem:
      type: object
      description: Serializer for WishlistItem model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductList'
          readOnly: true
        product_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
    Payment:
      type: object
      description: Serializer for Payment model.
      properties:
        id:
          type: integer
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        status:
          allOf:
          - $ref: '#/components/schemas/PaymentStatusEnum'
          description: |-
            Current status of the payment

            * `pending` - Pending
            * `completed` - Completed
            * `failed` - Failed
            * `canceled` - Canceled
        stripe_payment_intent_id:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - amount
      - created_at
      - id
      - updated_at
    PaymentConfirmationResponse:
      type: object
      description: Serializer for payment confirmation response.
      properties:
        success:
          type: boolean
        payment_id:
          type: integer
        order_number:
          type: string
        message:
          type: string
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        currency:
          type: string
      required:
      - amount_paid
      - currency
      - message
      - order_number
      - payment_id
      - success
    PaymentStatusEnum:
      enum:
      - pending
      - completed
      - failed
      - canceled
      type: string
      description: |-
        * `pending` - Pending
        * `completed` - Completed
        * `failed` - Failed
        * `canceled` - Canceled
    ProductCreate:
      type: object
      description: Serializer for creating products.
      properties:
        name:
          type: string
          description: Product name
          maxLength: 200
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Detailed product description
        short_description:
          type: string
          description: Short description for listings
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Product price
        original_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Original price for showing discounts
        sku:
          type: string
          description: Unique product identifier
          maxLength: 100
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Available quantity in stock
        category_id:
          type: integer
        manufacturer_id:
          type: integer
          nullable: true
        tag_ids:
          type: array
          items:
            type: integer
        is_visible:
          type: boolean
          description: Is product visible to the users
        sale_start:
          type: string
          format: date-time
          nullable: true
        sale_end:
          type: string
          format: date-time
          nullable: true
      required:
      - category_id
      - description
      - name
      - original_price
      - price
      - sku
      - slug
    ProductDelivery:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        supplier:
          type: integer
          description: Supplier who delivered the products
        supplier_name:
          type: string
          readOnly: true
        product:
          type: integer
          description: Product that was delivered
        product_name:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 1
          description: Quantity of products delivered
        delivery_date:
          type: string
          format: date-time
          description: When the delivery was received
        cost_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Cost per unit for this delivery
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - cost_per_unit
      - created_at
      - delivery_date
      - id
      - product
      - product_name
      - quantity
      - supplier
      - supplier_name
      - updated_at
    ProductDetail:
      type: object
      description: Detailed serializer for product detail views.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 200
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          description: Detailed product description
        short_description:
          type: string
          description: Short description for listings
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Product price
        original_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Original price for showing discounts
        current_price:
          type: string
          description: Get current price as formatted decimal string.
          readOnly: true
        discount_percentage:
          type: integer
          description: Calculate discount percentage.
          readOnly: true
        sku:
          type: string
          description: Unique product identifier
          maxLength: 100
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Available quantity in stock
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        category_id:
          type: integer
          writeOnly: true
        manufacturer:
          allOf:
          - $ref: '#/components/schemas/Manufacturer'
          readOnly: true
        manufacturer_id:
          type: integer
          writeOnly: true
          nullable: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        tag_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        is_visible:
          type: boolean
          description: Is product visible to the users
        sale_start:
          type: string
          format: date-time
          nullable: true
        sale_end:
          type: string
          format: date-time
          nullable: true
        is_on_sale:
          type: boolean
          readOnly: true
        is_in_stock:
          type: boolean
          description: Check if product is in stock.
          readOnly: true
        is_available:
          type: boolean
          description: Check if product is available for purchase.
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - category
      - category_id
      - created_at
      - current_price
      - description
      - discount_percentage
      - id
      - images
      - is_available
      - is_in_stock
      - is_on_sale
      - manufacturer
      - name
      - original_price
      - price
      - sku
      - slug
      - tags
      - updated_at
    ProductEntry:
      type: object
      properties:
        name:
          type: string
        qty:
          type: integer
        revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - name
      - qty
      - revenue
    ProductImage:
      type: object
      description: Serializer for ProductImage model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          description: Associated product
        image:
          type: string
          format: uri
          description: Product image
        image_url:
          type: string
          nullable: true
          readOnly: true
        is_primary:
          type: boolean
          description: Whether this is the primary product image
        sort_order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Display order of images
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - id
      - image
      - image_url
      - product
      - updated_at
    ProductList:
      type: object
      description: Simplified serializer for product listings.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Product name
          maxLength: 200
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
        short_description:
          type: string
          description: Short description for listings
          maxLength: 500
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Product price
        original_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Original price for showing discounts
        current_price:
          type: string
          description: Get current price as formatted decimal string.
          readOnly: true
        discount_percentage:
          type: integer
          description: Calculate discount percentage.
          readOnly: true
        sku:
          type: string
          description: Unique product identifier
          maxLength: 100
        stock_quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Available quantity in stock
        is_visible:
          type: boolean
          description: Is product visible to the users
        is_on_sale:
          type: boolean
          readOnly: true
        is_in_stock:
          type: boolean
          description: Check if product is in stock.
          readOnly: true
        is_available:
          type: boolean
          description: Check if product is available for purchase.
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        manufacturer:
          allOf:
          - $ref: '#/components/schemas/Manufacturer'
          readOnly: true
        primary_image:
          type: string
          nullable: true
          description: Get URL of primary product image.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - category
      - created_at
      - current_price
      - discount_percentage
      - id
      - is_available
      - is_in_stock
      - is_on_sale
      - manufacturer
      - name
      - original_price
      - price
      - primary_image
      - sku
      - slug
    Products:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ProductEntry'
        totalQty:
          type: integer
      required:
      - entries
      - totalQty
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: User's date of birth
        phone_number:
          type: string
          description: 'Phone number in international format. Supports digits, spaces,
            hyphens, parentheses, and optional ''+'' prefix. Example: +48131012012'
          pattern: ^\+?[\d\s\-\(\)]+$
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          minimum: -2147483648
          maximum: 2147483647
        profile_completed:
          type: boolean
          readOnly: true
          description: Whether profile has all required information for checkout
        display_name:
          type: string
          readOnly: true
        full_name:
          type: string
          readOnly: true
        age:
          type: integer
          readOnly: true
        is_checkout_ready:
          type: boolean
          readOnly: true
        missing_checkout_fields:
          type: array
          items: {}
          readOnly: true
        shipping_address:
          type: object
          additionalProperties: {}
          readOnly: true
        billing_address:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - age
      - billing_address
      - created_at
      - display_name
      - full_name
      - id
      - is_checkout_ready
      - missing_checkout_fields
      - profile_completed
      - shipping_address
      - updated_at
    ProfileCreate:
      type: object
      properties:
        user:
          type: integer
          description: Associated user account
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: User's date of birth
        phone_number:
          type: string
          description: 'Phone number in international format. Supports digits, spaces,
            hyphens, parentheses, and optional ''+'' prefix. Example: +48131012012'
          pattern: ^\+?[\d\s\-\(\)]+$
      required:
      - user
    ProfileList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        display_name:
          type: string
          readOnly: true
        user_email:
          type: string
          readOnly: true
        profile_completed:
          type: boolean
          description: Whether profile has all required information for checkout
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - display_name
      - id
      - updated_at
      - user_email
    ProfileMinimal:
      type: object
      description: Minimal profile serializer for address responses.
      properties:
        id:
          type: integer
          readOnly: true
        user_email:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
      required:
      - display_name
      - id
      - user_email
    ProfileUpdate:
      type: object
      properties:
        first_name:
          type: string
          description: User's first name
          maxLength: 150
        last_name:
          type: string
          description: User's last name
          maxLength: 150
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: User's date of birth
        phone_number:
          type: string
          description: 'Phone number in international format. Supports digits, spaces,
            hyphens, parentheses, and optional ''+'' prefix. Example: +48131012012'
          pattern: ^\+?[\d\s\-\(\)]+$
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          minimum: -2147483648
          maximum: 2147483647
    RoleEnum:
      enum:
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `1` - Admin
        * `2` - Employee
        * `3` - User
    Shipment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
          description: Order this shipment is for
        order_number:
          type: string
          description: Unique order number
          readOnly: true
        order_status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          description: |-
            Current status of the order

            * `pending` - Pending
            * `confirmed` - Confirmed
            * `shipped` - Shipped
            * `delivered` - Delivered
          readOnly: true
        order_user_email:
          type: string
          format: email
          title: Email address
          readOnly: true
        shipping_method:
          type: string
          readOnly: true
        courier:
          type: string
          readOnly: true
        shipped_at:
          type: string
          format: date-time
          nullable: true
          description: When the package was shipped
        delivered_at:
          type: string
          format: date-time
          nullable: true
          description: When the package was delivered
        shipping_address:
          type: string
          description: Shipping address at time of shipment
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - courier
      - created_at
      - id
      - order
      - order_number
      - order_status
      - order_user_email
      - shipping_address
      - shipping_method
      - updated_at
    ShippingMethod:
      type: object
      description: Serializer for ShippingMethod model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Name of the shipping method (e.g., 'Standard', 'Express')
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: Shipping cost
        courier:
          type: integer
          description: Courier company providing this shipping method
      required:
      - courier
      - id
      - name
      - price
    ShippingMethodEntry:
      type: object
      properties:
        name:
          type: string
        count:
          type: integer
      required:
      - count
      - name
    ShippingMethods:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ShippingMethodEntry'
        total:
          type: integer
      required:
      - entries
      - total
    Supplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Supplier company name
          maxLength: 100
        contact_email:
          type: string
          format: email
          description: Primary contact email
          maxLength: 254
        phone:
          type: string
          description: Contact phone number
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - id
      - name
      - updated_at
    Tag:
      type: object
      description: Serializer for Tag model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Tag name
          maxLength: 50
        slug:
          type: string
          description: URL-friendly version of the name
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was last updated
      required:
      - created_at
      - id
      - name
      - slug
      - updated_at
    TagEntry:
      type: object
      properties:
        name:
          type: string
        qty:
          type: integer
      required:
      - name
      - qty
    TemplateValidationError:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    TemplateValidationResponse:
      type: object
      properties:
        is_valid:
          type: boolean
        errors:
          type: array
          items:
            type: string
      required:
      - errors
      - is_valid
    WishlistCheck:
      type: object
      description: Serializer for wishlist check response.
      properties:
        product_id:
          type: integer
        is_in_wishlist:
          type: boolean
        wishlist_item_id:
          type: integer
          nullable: true
      required:
      - is_in_wishlist
      - product_id
    WishlistItem:
      type: object
      description: Serializer for WishlistItem model.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductList'
          readOnly: true
        product_id:
          type: integer
          writeOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the record was created
      required:
      - created_at
      - id
      - product
      - product_id
    WishlistItemCreate:
      type: object
      description: Serializer for creating wishlist items.
      properties:
        product_id:
          type: integer
      required:
      - product_id
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
externalDocs:
  description: AllAuth API specification
  url: /_allauth/openapi.html
