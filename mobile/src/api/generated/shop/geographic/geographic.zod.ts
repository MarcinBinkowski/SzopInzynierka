/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * ShopDjango API
 * API for ShopDjango project
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


/**
 * Base ViewSet with built-in ProtectedError handling for delete operations.
All ViewSets should inherit from this instead of ModelViewSet directly.
 */
export const geographicCountriesListParams = zod.object({
  "id": zod.coerce.number()
})

export const geographicCountriesListQueryParams = zod.object({
  "id": zod.coerce.number().optional(),
  "ordering": zod.coerce.string().optional().describe('Which field to use when ordering the results.'),
  "search": zod.coerce.string().optional().describe('A search term.')
})

export const geographicCountriesListResponseCodeMax = 2;
export const geographicCountriesListResponseNameMax = 100;


export const geographicCountriesListResponseItem = zod.object({
  "id": zod.number(),
  "code": zod.string().max(geographicCountriesListResponseCodeMax).describe('alpha-2 country code (e.g., PL, US, GB)'),
  "name": zod.string().max(geographicCountriesListResponseNameMax).describe('Official country name in English'),
  "created_at": zod.iso.datetime({}).describe('Timestamp when the record was created'),
  "updated_at": zod.iso.datetime({}).describe('Timestamp when the record was last updated')
}).describe('Simplified country serializer for list views.')
export const geographicCountriesListResponse = zod.array(geographicCountriesListResponseItem)

/**
 * Base ViewSet with built-in ProtectedError handling for delete operations.
All ViewSets should inherit from this instead of ModelViewSet directly.
 */
export const geographicCountriesCreateParams = zod.object({
  "id": zod.coerce.number()
})

export const geographicCountriesCreateBodyCodeMax = 2;
export const geographicCountriesCreateBodyNameMax = 100;


export const geographicCountriesCreateBody = zod.object({
  "code": zod.string().max(geographicCountriesCreateBodyCodeMax).describe('alpha-2 country code (e.g., PL, US, GB)'),
  "name": zod.string().max(geographicCountriesCreateBodyNameMax).describe('Official country name in English')
}).describe('Serializer for creating new countries (admin only).')

/**
 * Base ViewSet with built-in ProtectedError handling for delete operations.
All ViewSets should inherit from this instead of ModelViewSet directly.
 */
export const geographicCountriesRetrieveParams = zod.object({
  "id": zod.coerce.number()
})

export const geographicCountriesRetrieveResponseCodeMax = 2;
export const geographicCountriesRetrieveResponseNameMax = 100;


export const geographicCountriesRetrieveResponse = zod.object({
  "id": zod.number(),
  "code": zod.string().max(geographicCountriesRetrieveResponseCodeMax).describe('alpha-2 country code (e.g., PL, US, GB)'),
  "name": zod.string().max(geographicCountriesRetrieveResponseNameMax).describe('Official country name in English'),
  "created_at": zod.iso.datetime({}).describe('Timestamp when the record was created'),
  "updated_at": zod.iso.datetime({}).describe('Timestamp when the record was last updated')
}).describe('Full country serializer with all fields.')

/**
 * Base ViewSet with built-in ProtectedError handling for delete operations.
All ViewSets should inherit from this instead of ModelViewSet directly.
 */
export const geographicCountriesUpdateParams = zod.object({
  "id": zod.coerce.number()
})

export const geographicCountriesUpdateBodyCodeMax = 2;
export const geographicCountriesUpdateBodyNameMax = 100;


export const geographicCountriesUpdateBody = zod.object({
  "code": zod.string().max(geographicCountriesUpdateBodyCodeMax).describe('alpha-2 country code (e.g., PL, US, GB)'),
  "name": zod.string().max(geographicCountriesUpdateBodyNameMax).describe('Official country name in English')
}).describe('Serializer for updating countries (admin only).')

export const geographicCountriesUpdateResponseCodeMax = 2;
export const geographicCountriesUpdateResponseNameMax = 100;


export const geographicCountriesUpdateResponse = zod.object({
  "code": zod.string().max(geographicCountriesUpdateResponseCodeMax).describe('alpha-2 country code (e.g., PL, US, GB)'),
  "name": zod.string().max(geographicCountriesUpdateResponseNameMax).describe('Official country name in English')
}).describe('Serializer for updating countries (admin only).')

/**
 * Base ViewSet with built-in ProtectedError handling for delete operations.
All ViewSets should inherit from this instead of ModelViewSet directly.
 */
export const geographicCountriesPartialUpdateParams = zod.object({
  "id": zod.coerce.number()
})

export const geographicCountriesPartialUpdateBodyCodeMax = 2;
export const geographicCountriesPartialUpdateBodyNameMax = 100;


export const geographicCountriesPartialUpdateBody = zod.object({
  "code": zod.string().max(geographicCountriesPartialUpdateBodyCodeMax).optional().describe('alpha-2 country code (e.g., PL, US, GB)'),
  "name": zod.string().max(geographicCountriesPartialUpdateBodyNameMax).optional().describe('Official country name in English')
}).describe('Serializer for updating countries (admin only).')

export const geographicCountriesPartialUpdateResponseCodeMax = 2;
export const geographicCountriesPartialUpdateResponseNameMax = 100;


export const geographicCountriesPartialUpdateResponse = zod.object({
  "code": zod.string().max(geographicCountriesPartialUpdateResponseCodeMax).describe('alpha-2 country code (e.g., PL, US, GB)'),
  "name": zod.string().max(geographicCountriesPartialUpdateResponseNameMax).describe('Official country name in English')
}).describe('Serializer for updating countries (admin only).')

/**
 * Handle deletion with foreign key constraint protection.
 */
export const geographicCountriesDestroyParams = zod.object({
  "id": zod.coerce.number()
})

